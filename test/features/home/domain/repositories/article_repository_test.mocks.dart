// Mocks generated by Mockito 5.4.4 from annotations
// in ekd_test/test/features/home/domain/repositories/article_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ekd_test/core/network/app_network.dart' as _i7;
import 'package:ekd_test/features/home/data/datasources/article_local_datasource.dart'
    as _i6;
import 'package:ekd_test/features/home/data/datasources/article_remote_datasource.dart'
    as _i3;
import 'package:ekd_test/features/home/data/models/article_model.dart' as _i5;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ArticleRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRemoteDatasource extends _i1.Mock
    implements _i3.ArticleRemoteDatasource {
  MockArticleRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.ArticleModel>> getArticles() => (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.ArticleModel>>.value(<_i5.ArticleModel>[]),
      ) as _i4.Future<List<_i5.ArticleModel>>);
}

/// A class which mocks [ArticleLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleLocalDataSource extends _i1.Mock
    implements _i6.ArticleLocalDataSource {
  MockArticleLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cacheArticles(List<_i5.ArticleModel>? articles) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheArticles,
          [articles],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.ArticleModel>> getCachedArticles() => (super.noSuchMethod(
        Invocation.method(
          #getCachedArticles,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.ArticleModel>>.value(<_i5.ArticleModel>[]),
      ) as _i4.Future<List<_i5.ArticleModel>>);
}

/// A class which mocks [AppNetwork].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppNetwork extends _i1.Mock implements _i7.AppNetwork {
  MockAppNetwork() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i2.Logger);

  @override
  _i4.Future<dynamic> post({
    String? url = r'',
    Map<dynamic, dynamic>? formData,
    String? token,
    bool? showPrint = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #url: url,
            #formData: formData,
            #token: token,
            #showPrint: showPrint,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<dynamic> get({
    String? url = r'',
    Map<String, String>? parameters,
    String? token,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #url: url,
            #parameters: parameters,
            #token: token,
            #headers: headers,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<dynamic> delete({
    String? url = r'',
    Map<String, String>? parameters,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #url: url,
            #parameters: parameters,
            #token: token,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<bool> checkInternetConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkInternetConnection,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
